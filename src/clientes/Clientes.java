package clientes;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Text;

/**
 *
 * @author CrisRodFe
 */
public class Clientes extends javax.swing.JFrame {
    /**
     * Creates new form PROG08
     */
    public Clientes() {
        initComponents();
        jTextArea1.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Copiar = new javax.swing.JMenuItem();
        Cortar = new javax.swing.JMenuItem();
        Pegar = new javax.swing.JMenuItem();
        entradaDeTexto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        Copiar.setText("Copiar");
        Copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopiarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Copiar);

        Cortar.setText("Cortar");
        Cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CortarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Cortar);

        Pegar.setText("Pegar");
        Pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PegarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Pegar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Procesador XML");
        setResizable(false);

        entradaDeTexto.setComponentPopupMenu(jPopupMenu1);
        entradaDeTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaDeTextoActionPerformed(evt);
            }
        });

        jLabel1.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jLabel1.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("                    Introduzca: Dni, \"Nombre\", \"Apellido\", email, tel√©fono.");

        jButton1.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Helvetica", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Archivo XML");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(entradaDeTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(184, 184, 184)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(entradaDeTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void entradaDeTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entradaDeTextoActionPerformed
        try {
            procesarCadena(entradaDeTexto.getText());
        } catch (IOException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_entradaDeTextoActionPerformed
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            procesarCadena(entradaDeTexto.getText());
        } catch (IOException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        entradaDeTexto.setText("");
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //Acciones para el PopupMenu en la entrada de texto para poder realizar las acciones copiar,cortar y pegar.
    private void CopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopiarActionPerformed
        entradaDeTexto.copy();
    }//GEN-LAST:event_CopiarActionPerformed

    private void CortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CortarActionPerformed
        entradaDeTexto.cut();
    }//GEN-LAST:event_CortarActionPerformed

    private void PegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PegarActionPerformed
        entradaDeTexto.paste();
    }//GEN-LAST:event_PegarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Copiar;
    private javax.swing.JMenuItem Cortar;
    private javax.swing.JMenuItem Pegar;
    private javax.swing.JTextField entradaDeTexto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    /*
     * Compilaci√≥n de las Expresiones regulares que comprobar√°n que los datos introducidos son correctos.
    */
    //Comprueba que el DNI-NIE puede comenzar por una letra o no,seguida de entre uno y nueva d√≠gitos y que termine por una letra
    Pattern d = Pattern.compile("[XYxy]?[0-9]{1,9}[A-Za-z]$"); 
    //Comprueba que el email contenga el s√≠mbolo @ precedido y seguido por caracteres alfanum√©ricos,un punto, y termine con dos o tres letras.
    Pattern e = Pattern.compile("^[^0-9|^@|^\\.|^www\\.][A-Za-z0-9_-~#]+[\\@][A-Za-z0-9_-~#]+\\.[A-Za-z]{2,3}$"); 
    //Comprueba el n√∫mero de telefono.Puede comenzar con + y/o prefijo,seguidos de seis o nueve d√≠gitos
    Pattern t = Pattern.compile("(\\+)?(\\([0-9]{2,3}\\))?([0-9]{6,9})");    
    //Comprueba nombre/apellidos para que est√©n entre comillas dobles o simples y compuesto de al menos un caracter alfanum√©rico.
    Pattern texto = Pattern.compile("^[\"\'](.+)[\"\']$");     
             
    /**
     * 
     * @param entradaDeTexto (JTextField)
     * @throws FileNotFoundException
     * @throws IOException 
     */
    public void procesarCadena(String entradaDeTexto) throws FileNotFoundException, IOException{ 
        String archivo = null;    
        ArrayList<Telefonos>Telefono = new ArrayList<Telefonos>();
        ArrayList<Emails> Email = new ArrayList<Emails>();
        Cliente c = new Cliente();//Creamos nueva instancia de la clase cliente,donde iremos almacenando los datos                 
        String[] cadena = entradaDeTexto.split(",");//Array donde almacenamos cada "trozo" del texto introducido que ha sido separado con comas 
        boolean nombre = false;//Variable para manejar la insercci√≥n de un dato de la cadena en el atributo nombre o apellido          
        String simboloMas="";
        String prefijo;
        String numTelefono="";  
        //Las siguientes variables booleanas nos servir√°n para controlar que se cumplan todas las condiciones para continuar con el programa.
        boolean dnivalido=false,nomvalido=false,apellidovalido=false,emailvalido=false,telefonovalido=false;
        
        /*Con la estructura for,cada "trozo"(variable dato) del texto introducido por teclado ser√° evaluado a trav√©s de las diferentes condiciones. 
          Cuando coincida con uno de los supuestos (estructuras if), se llevar√°n a cabo las sentencias correspondientes.
        */
        for(String dato: cadena){           
            Matcher cDni=d.matcher(dato);
            Matcher cTexto=texto.matcher(dato);
            Matcher cTelefono=t.matcher(dato);
            Matcher cEmail=e.matcher(dato);
            dato=dato.trim();//Eliminar√° los espacios en blanco de cada trozo extra√≠do del texto introducido.
            prefijo="";
            /*
            * Si 'dato' coincide con alguna de las condiciones:
            *  Se modificar√° su correspondiente valor booleano a true.
            *  Har√° una llamada al setter para introducir el valor a su correspondiente atributo. 
            * Si no coincide,seguir√° a la siguiente condici√≥n,si no coincide ninguna saldr√° un mensaje de error.
            */ 
                if(cDni.matches()){   
                    dnivalido=true;
                    c.setId(dato);                   
                }else if(cTexto.matches()){ 
                    nomvalido=true;
                    if(!nombre){
                       dato=cTexto.group(1);
                       c.setNombre(dato);
                       nombre=true;
                    }else{
                        apellidovalido=true;
                        dato=cTexto.group(1);
                        c.setApellido(dato);}
                }else if(cEmail.matches()){
                    emailvalido=true;
                    Emails newEmail = new Emails();
                    newEmail.email=dato.toLowerCase();                     
                    Email.add(newEmail);                    
                }else if(cTelefono.matches()){
                    telefonovalido=true;
                    if(cTelefono.group(1)!=null){  
                         if(cTelefono.group(1).equals("+")){
                            simboloMas="+";
                         }else{
                            simboloMas="";}}
                    if(cTelefono.group(2)!=null){
                         prefijo=cTelefono.group(2).substring(1, cTelefono.group(2).length()-1);}                               
                    if(cTelefono.group(3)!=null){
                        numTelefono=cTelefono.group(3);}
                    Telefonos newTel = new Telefonos();
                    newTel.telef=Long.valueOf(prefijo+numTelefono);
                    newTel.suma=simboloMas;                                                        
                    simboloMas="";                       
                    Telefono.add(newTel);                                    
            }   
        }
        //Si todos los valores booleanos siguientes son true,significa que todos los datos han sido introducidos correctamente,coinciden con los patrones. Se puede procesar.        
        if(nomvalido&&dnivalido&&apellidovalido&&emailvalido&&telefonovalido){
            //A√±adimos los array de los tel√©fonos y los emails a su atributo correspondiente con el getter y los ordenamos previamente
            Collections.sort(Telefono);
            c.setTelefono(Telefono);
            Collections.sort(Email);
            c.setEmail(Email);
            File fichero = null;
            Document doc=DOMUtil.crearDOMVacio("datos_cliente");//Llamada al m√©todo de la clase facilitada 'DOMUtil'
            pasarCliente(doc, c);//Llamada al m√©todo que pasar√° los datos a una estructura XML.
            JFileChooser fc = new JFileChooser();//Lanzamos una ventana para la selecci√≥n del archivo.
            int opcion = fc.showSaveDialog(null);
            if(opcion == JFileChooser.CANCEL_OPTION){
                JOptionPane.showMessageDialog(rootPane, "Opci√≥n cancelada");
            }else{if(opcion == JFileChooser.APPROVE_OPTION)
                fichero = fc.getSelectedFile();             
                archivo = fichero.toString();
                DOMUtil.DOM2XML(doc,archivo);//M√©todo que pasar√° el documento XML creado al archivo elegido con FileChooser.            
            
            //Se leer√° el archivo creado para mostrarlo por pantalla
            try{
                File leer=new File(archivo);
                FileReader fr=new FileReader(leer);
                BufferedReader br=new BufferedReader(fr);
                String linea;
                int lineastotales=0;
                jTextArea1.setText(archivo);
                while((linea=br.readLine())!=null){
                    lineastotales++;
                    jTextArea1.setText(jTextArea1.getText()+linea+"\n");              
                }
            }catch(IOException ioe){
                JOptionPane.showMessageDialog(rootPane,"Error","Error en lectura de archivo",JOptionPane.ERROR_MESSAGE); } 
            }
            //Si no todos los valores booleanos son true saldr√° un mensaje de error seg√∫n la condici√≥n que no se haya cumplido.
        } else {
            if(!nomvalido&&dnivalido&&apellidovalido&&emailvalido&&telefonovalido)
               JOptionPane.showMessageDialog(rootPane, "Introduzca correctamente el nombre/apellido(recuerde usar comillas)", "Error de entrada", JOptionPane.ERROR_MESSAGE);
            if(nomvalido&&!dnivalido&&apellidovalido&&emailvalido&&telefonovalido)
               JOptionPane.showMessageDialog(rootPane, "Introduzca un DNI/NIE v√°lido", "Error de entrada", JOptionPane.ERROR_MESSAGE); 
            if(nomvalido&&dnivalido&&!apellidovalido&&emailvalido&&telefonovalido)
               JOptionPane.showMessageDialog(rootPane, "Introduzca correctamente el nombre/apellido(recuerde usar comillas)", "Error de entrada", JOptionPane.ERROR_MESSAGE); 
            if(nomvalido&&dnivalido&&apellidovalido&&!emailvalido&&telefonovalido)
               JOptionPane.showMessageDialog(rootPane, "Introduzca un email v√°lido", "Error de entrada", JOptionPane.ERROR_MESSAGE); 
            if(nomvalido&&dnivalido&&apellidovalido&&emailvalido&&!telefonovalido)  
               JOptionPane.showMessageDialog(rootPane, "Introduzca un tel√©fono v√°lido", "Error de entrada", JOptionPane.ERROR_MESSAGE); 
            if(!nomvalido&&!dnivalido&&!apellidovalido&&!emailvalido&&!telefonovalido)
               JOptionPane.showMessageDialog(rootPane,"Introduzca correctamente los datos siguiendo las indicaciones","Error de entrada",JOptionPane.ERROR_MESSAGE); 
        }
    }         
    /**
     * @param doc
     * @param cliente 
     * Se pasar√°n los datos de los atributos de la clase Cliente a una estructura XML:
     */
    private void pasarCliente(Document doc,Cliente cliente){        
        Element dni=doc.createElement("id");//Crear la etiqueta dentro de la que ir√° el valor del atributo
        Text datodni=doc.createTextNode(cliente.getId());//Crear un nodo con el valor del atributo al que accedemos con el getter correspondiente        
        dni.appendChild(datodni);//Colocamos el texto con el valor del atributo en la eqtiqueta correspondiente
        doc.getDocumentElement().appendChild(dni);//A√±adimos la etiqueta creada al elemento ra√≠z del documento        
        Element nombre=doc.createElement("nombre");
        Text datonombre=doc.createTextNode(cliente.getNombre());
        nombre.appendChild(datonombre);
        doc.getDocumentElement().appendChild(nombre);        
        Element apellido=doc.createElement("apellido");
        Text datoapellido=doc.createTextNode(cliente.getApellido());
        apellido.appendChild(datoapellido);
        doc.getDocumentElement().appendChild(apellido);        
        Element telefonos=doc.createElement("telefonos");
        for(Telefonos datos: cliente.getTelefono()){
            Element nuevotelefono=doc.createElement("telefono");
            Text datotelefono=doc.createTextNode(datos.suma+String.valueOf(datos.telef));
            nuevotelefono.appendChild(datotelefono);
            telefonos.appendChild(nuevotelefono);}
            telefonos.setAttribute("total", String.valueOf(cliente.getTelefono().size()));//A√±adimos el atributo 'total' al elemento <telefonos>
        doc.getDocumentElement().appendChild(telefonos);           
        Element emails=doc.createElement("mails");
        for(Emails datos: cliente.getEmail()){
            Element nuevoemail=doc.createElement("mail");            
            Text datoemail=doc.createTextNode(datos.email);
            nuevoemail.appendChild(datoemail);
            emails.appendChild(nuevoemail); }
        doc.getDocumentElement().appendChild(emails);                                  
    }
}

    
    
    
    
